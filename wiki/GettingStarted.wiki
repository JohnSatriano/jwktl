#summary Basic steps for using JWKTL
#labels Featured

= Getting Started =

== Installing JWKTL ==

== Obtaining Wiktionary data ==

The first step towards using JWKTL is obtaining the actual Wiktionary data. JWKTL is able to process the XML dump files containing the wiki markup of the Wiktionary articles. These dump files are released by the Wikimedia foundation under a free license. Choose the Wiktionary language edition and data from the download page at http://dumps.wikimedia.org/backup-index.html (e.g., "enwiktionary" for the English Wiktionary) and save the corresponding {{pages-articles.xml}} dump, i.e. the dump containing at least articles, templates, image descriptions, and primary meta-pages .


== Parsing the data ==

Before JWKTL is ready to use, you need to parse the obtaining Wiktionary dump file. The rationale behind this is to get in a position to efficiently access the Wiktionary data within a productive application environment by separating out all preparatory matters in a parsing step. In this step, the wiki syntax is being parsed by JWKTL and stored in a Berkeley DB. The parsing methods are based on text mining methods, which  obviously require some computation time. This is, however, a one-time effort. The resulting database can then be repeatedly and quickly accessed, as discussed in the next section.


Once you have downloaded the Wiktionary dump file, set up a Java project and include JWKTL in your classpath. You also need to download the Oracle Berkeley DB Java Edition (version 4.0.92 or higher) from http://www.oracle.com/technology/software/products/berkeley-db/je/index.html and add the corresponding JAR to your classpath. Please have a look at Oracle's documentation to find out how this works.

Then write a simple main class with the following code:

  public static void main(String[] args) throws Exception {
    File dumpFile = new File(PATH_TO_DUMP_FILE);
    File outputDirectory = new File(TARGET_DIRECTORY);
    boolean overwriteExisting = OVERWRITE_EXISTING_FILES;
      
    Wiktionary.parseWiktionaryDump(dumpFile, outputDirectory, overwriteExisting);

Thereby, you should choose the following parameters:

    PATH_TO_DUMP_FILE : The path to the Wiktionary dump file, i.e. the downloaded data file.
    TARGET_DIRECTORY : The name of the output folder, where the parsed Wiktionary should be placed (needs to be a directory).
    OVERWRITE_EXISTING_FILES : If there is already a parsed Wiktionary within the target directory, it will only be overwritten if this parameter is set to true. 

Run your simple piece of code and get yourself a coffee; parsing a dump file usually requires between five minutes and two hours, depending on your machine. You might want to allow the java process to use some additional heap space using the "Xmx" parameter. Please refer to the manual of your Java virtual machine.

As soon as your program termines, you should have a number of Berkeley DB files in your target directory - this is your parsed Wiktionary. You are now able to access the data that is the subject of the following section. 

== Accessing the data ==